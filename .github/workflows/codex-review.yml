name: Codex PR Review

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
  workflow_dispatch: {}

jobs:
  codex_review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    outputs:
      final_message: ${{ steps.run_codex.outputs.final-message }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: refs/pull/${{ github.event.pull_request.number }}/merge

      - name: Pre-fetch base and head refs for the PR
        run: |
          git fetch --no-tags origin \
            ${{ github.event.pull_request.base.ref }} \
            +refs/pull/${{ github.event.pull_request.number }}/head

      - name: Run Codex review
        id: run_codex
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          PR_BODY: ${{ github.event.pull_request.body }}
          HEAD_SHA: ${{ github.event.pull_request.head.sha }}
          REPO: ${{ github.repository }}
          MAX_OUTPUT_TOKENS: "600"
        run: |
          set -euxo pipefail
          chmod +x scripts/codex_review_exec.sh

          set +e
          scripts/codex_review_exec.sh --base "${{ github.event.pull_request.base.sha }}" --artifact codex_review_findings.txt
          CODEX_RC=$?
          set -e

          if [ ! -s codex_review_findings.txt ]; then
            if [ $CODEX_RC -ne 0 ]; then
              echo "⚠️ Codex review could not complete (exit $CODEX_RC). Most common cause: API quota or invalid key." > codex_review_findings.txt
            else
              echo "✅ No changes to review against base; Codex skipped." > codex_review_findings.txt
            fi
          fi

          echo "final-message<<'EOF'" >> "$GITHUB_OUTPUT"
          cat codex_review_findings.txt >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Upload findings artifact
        uses: actions/upload-artifact@v4
        with:
          name: codex_review_findings
          path: codex_review_findings.txt

  post_feedback:
    runs-on: ubuntu-latest
    needs: [codex_review]
    if: needs.codex_review.outputs.final_message != ''
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Report Codex feedback
        uses: actions/github-script@v7
        env:
          CODEX_FINAL_MESSAGE: ${{ needs.codex_review.outputs.final_message }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: process.env.CODEX_FINAL_MESSAGE,
            });
